// Export utilities for ad content
export interface AdData {
  title: string;
  hook: string;
  script: string;
  visuals: string[];
  niche: string;
  targetAudience: string;
  performance?: {
    estimatedViews: number;
    estimatedCTR: number;
    viralScore: number;
  };
}

export class ExportService {
  // Export as formatted text
  static exportAsText(ad: AdData): string {
    const timestamp = new Date().toLocaleDateString();
    
    return `🎬 VIRAL AD SCRIPT
Generated by Hookly.xyz on ${timestamp}

📊 CAMPAIGN DETAILS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Product: ${ad.title}
Niche: ${ad.niche}
Target Audience: ${ad.targetAudience}

🎯 HOOK (First 3 seconds)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${ad.hook}

📜 FULL SCRIPT (30-60 seconds)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${ad.script}

🎬 VISUAL PROMPTS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${ad.visuals.map((visual, index) => `${index + 1}. ${visual}`).join('\n')}

${ad.performance ? `📈 PERFORMANCE PREDICTION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Estimated Views: ${ad.performance.estimatedViews.toLocaleString()}
Estimated CTR: ${ad.performance.estimatedCTR}%
Viral Score: ${ad.performance.viralScore}/10

` : ''}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Created with Hookly.xyz - The AI UGC Generator
        Get premium ad scripts at hookly.xyz
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`;
  }

  // Export as TikTok format
  static exportAsTikTok(ad: AdData): string {
    return `🎬 TIKTOK AD SCRIPT

🎯 HOOK: ${ad.hook}

📱 SCRIPT:
${ad.script}

🎥 SHOTS TO FILM:
${ad.visuals.map((visual, index) => `• ${visual}`).join('\n')}

#ad #ugc #${ad.niche.toLowerCase().replace(/\s+/g, '')} #viral

Made with Hookly.xyz 🚀`;
  }

  // Export as Instagram format
  static exportAsInstagram(ad: AdData): string {
    return `📱 INSTAGRAM REEL SCRIPT

${ad.hook} ✨

${ad.script}

🎬 Film these shots:
${ad.visuals.map((visual, index) => `${index + 1}. ${visual}`).join('\n')}

#instagramreels #ugcads #${ad.niche.toLowerCase().replace(/\s+/g, '')} #contentcreator #brandpartner

Created with @hookly.xyz 💫`;
  }

  // Export as YouTube format
  static exportAsYouTube(ad: AdData): string {
    return `🎥 YOUTUBE SHORT SCRIPT

HOOK: ${ad.hook}

SCRIPT:
${ad.script}

FILMING NOTES:
${ad.visuals.map((visual, index) => `Scene ${index + 1}: ${visual}`).join('\n')}

📊 Target Audience: ${ad.targetAudience}
🎯 Niche: ${ad.niche}

#YouTubeShorts #UGC #${ad.niche.replace(/\s+/g, '')} #AdScript

Script generated by Hookly.xyz`;
  }

  // Export as email template for clients
  static exportAsClientEmail(ad: AdData): string {
    return `Subject: Your UGC Ad Script is Ready! 🎬

Hi there!

Your viral ad script for ${ad.title} is ready to film! Here's everything you need:

🎯 THE HOOK (grab attention in 3 seconds):
"${ad.hook}"

📜 FULL SCRIPT:
${ad.script}

🎬 FILMING CHECKLIST:
${ad.visuals.map((visual, index) => `□ ${visual}`).join('\n')}

📊 PREDICTED PERFORMANCE:
${ad.performance ? `• Estimated Views: ${ad.performance.estimatedViews.toLocaleString()}
• Estimated CTR: ${ad.performance.estimatedCTR}%
• Viral Score: ${ad.performance.viralScore}/10` : 'Performance data available in dashboard'}

🎯 TARGET AUDIENCE: ${ad.targetAudience}

Ready to film? Keep this email handy during production!

Best regards,
Your Hookly Team
hookly.xyz`;
  }

  // Download as text file
  static downloadAsFile(content: string, filename: string, mimeType: string = 'text/plain') {
    const blob = new Blob([content], { type: mimeType });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = filename;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  }

  // Copy to clipboard
  static async copyToClipboard(content: string): Promise<boolean> {
    try {
      await navigator.clipboard.writeText(content);
      return true;
    } catch (error) {
      console.error('Failed to copy to clipboard:', error);
      return false;
    }
  }

  // Generate PDF (basic HTML to PDF conversion)
  static generatePDF(ad: AdData): string {
    const timestamp = new Date().toLocaleDateString();
    
    return `<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>${ad.title} - Ad Script</title>
    <style>
        body { 
            font-family: 'Arial', sans-serif; 
            max-width: 800px; 
            margin: 0 auto; 
            padding: 40px 20px; 
            line-height: 1.6; 
            color: #333;
        }
        .header { 
            text-align: center; 
            border-bottom: 3px solid #7c3aed; 
            padding-bottom: 20px; 
            margin-bottom: 40px; 
        }
        .title { 
            font-size: 28px; 
            font-weight: bold; 
            color: #7c3aed; 
            margin-bottom: 10px; 
        }
        .subtitle { 
            color: #666; 
            font-size: 14px; 
        }
        .section { 
            margin-bottom: 30px; 
            background: #f9fafb; 
            padding: 20px; 
            border-radius: 8px; 
            border-left: 4px solid #7c3aed; 
        }
        .section-title { 
            font-size: 18px; 
            font-weight: bold; 
            color: #7c3aed; 
            margin-bottom: 15px; 
            display: flex; 
            align-items: center; 
        }
        .content { 
            font-size: 14px; 
            line-height: 1.8; 
        }
        .hook { 
            font-style: italic; 
            font-size: 16px; 
            background: #fff; 
            padding: 15px; 
            border-radius: 6px; 
            border: 1px solid #e5e7eb; 
        }
        .visuals li { 
            margin-bottom: 8px; 
        }
        .footer { 
            text-align: center; 
            margin-top: 50px; 
            padding-top: 20px; 
            border-top: 1px solid #e5e7eb; 
            color: #666; 
            font-size: 12px; 
        }
        .performance-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            margin-top: 15px;
        }
        .performance-item {
            background: white;
            padding: 15px;
            border-radius: 6px;
            text-align: center;
            border: 1px solid #e5e7eb;
        }
        .performance-number {
            font-size: 20px;
            font-weight: bold;
            color: #7c3aed;
        }
        .performance-label {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="title">🎬 ${ad.title}</div>
        <div class="subtitle">Viral Ad Script Generated on ${timestamp}</div>
    </div>

    <div class="section">
        <div class="section-title">📊 Campaign Details</div>
        <div class="content">
            <strong>Niche:</strong> ${ad.niche}<br>
            <strong>Target Audience:</strong> ${ad.targetAudience}
        </div>
    </div>

    <div class="section">
        <div class="section-title">🎯 Hook (First 3 Seconds)</div>
        <div class="hook">${ad.hook}</div>
    </div>

    <div class="section">
        <div class="section-title">📜 Full Script (30-60 Seconds)</div>
        <div class="content">${ad.script.replace(/\n/g, '<br>')}</div>
    </div>

    <div class="section">
        <div class="section-title">🎬 Visual Prompts</div>
        <ul class="visuals">
            ${ad.visuals.map(visual => `<li>${visual}</li>`).join('')}
        </ul>
    </div>

    ${ad.performance ? `
    <div class="section">
        <div class="section-title">📈 Performance Prediction</div>
        <div class="performance-grid">
            <div class="performance-item">
                <div class="performance-number">${ad.performance.estimatedViews.toLocaleString()}</div>
                <div class="performance-label">Estimated Views</div>
            </div>
            <div class="performance-item">
                <div class="performance-number">${ad.performance.estimatedCTR}%</div>
                <div class="performance-label">Estimated CTR</div>
            </div>
            <div class="performance-item">
                <div class="performance-number">${ad.performance.viralScore}/10</div>
                <div class="performance-label">Viral Score</div>
            </div>
        </div>
    </div>
    ` : ''}

    <div class="footer">
        <strong>Created with Hookly.xyz</strong><br>
        The AI-powered UGC ad generator for viral content<br>
        Get premium scripts at hookly.xyz
    </div>
</body>
</html>`;
  }

  // Open PDF in new window for printing
  static openPDFPreview(ad: AdData) {
    const htmlContent = this.generatePDF(ad);
    const newWindow = window.open('', '_blank');
    if (newWindow) {
      newWindow.document.write(htmlContent);
      newWindow.document.close();
    }
  }
}